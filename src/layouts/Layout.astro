---
interface Props {
	title: string;
	description: string;
}
const { title = 'Asesor de Seguros', description = 'Protegiendo tu futuro.' } = Astro.props;
---
<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700;900&display=swap" rel="stylesheet">
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--azul-vibrante: #023fc2;
		--dorado-acento: #fad962;
		--gris-oscuro: #111111;
		--blanco-puro: #ffffff;
	}
	html {
		font-family: 'Monsterrat', sans-serif;
		background-color: var(--blanco-puro);
		scroll-behavior: smooth;
	}
	body {
		margin: 0;
		font-size: 18px;
		color: var(--gris-oscuro);
		overflow-x: hidden;
	}
    *, *::before, *::after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }
    
    /* Animations globales */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    @keyframes fadeInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    @keyframes scaleIn {
        from {
            opacity: 0;
            transform: scale(0.8);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }
    
    /* Classes d'animation utilitaires */
    .fade-in-up {
        animation: fadeInUp 0.8s ease forwards;
    }
    
    .fade-in-left {
        animation: fadeInLeft 0.8s ease forwards;
    }
    
    .fade-in-right {
        animation: fadeInRight 0.8s ease forwards;
    }
    
    .scale-in {
        animation: scaleIn 0.8s ease forwards;
    }
    
    /* Effet de parallaxe subtil */
    .parallax {
        transform: translateZ(0);
        will-change: transform;
    }
    
    /* Amélioration du scroll sur mobile */
    @media (max-width: 768px) {
        html {
            scroll-behavior: auto;
        }
    }
    
    /* Optimisations de performance */
    .animate-on-scroll {
        will-change: opacity, transform;
    }
    
    /* Effet de focus amélioré pour l'accessibilité */
    a:focus,
    button:focus {
        outline: 2px solid #0052FF;
        outline-offset: 2px;
    }
    
    /* Transitions fluides pour tous les éléments interactifs */
    a, button, .btn {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
</style>