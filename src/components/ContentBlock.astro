---
// No necesitamos el componente <Image> aquí, usaremos un fondo de CSS
import dadPhoto from "../assets/dad-photo.jpg"; // ¡Revisa que el nombre y extensión sean correctos!
---

<!-- La estructura ahora es más simple: dos columnas directas -->
<section id="content-block-section">
    <div class="text-column">
        <div class="content-wrapper">
            <span class="section-badge">TU ASESOR</span>
            <h2 class="animate-on-scroll">Tu asesor patrimonial de confianza,</h2>
            <h3 class="animate-on-scroll">estés dónde estés.</h3>
            <p class="animate-on-scroll" data-delay="0.2">
                Hola, soy <strong>Abel Díaz</strong>. Mi misión es darte claridad y respaldo para tomar decisiones financieras inteligentes y seguras.
                Estoy presente en Aguascalientes y Guadalajara, y trabajo con clientes en varias ciudades de México y Estados Unidos.
                Mis asesorías son cercanas, claras y personalizadas, sin importar dónde te encuentres.
            </p>
            <div class="trust-indicators animate-on-scroll" data-delay="0.3">
                <div class="trust-item">
                    <div class="trust-icon">✓</div>
                    <span>Experiencia global</span>
                </div>
                <div class="trust-item">
                    <div class="trust-icon">✓</div>
                    <span>Asesoría personalizada</span>
                </div>
            </div>
            <a
                href="#contacto"
                class="content-button animate-on-scroll"
                data-delay="0.4"
                id="buttom-hablemos"
            >
                <span>Hablemos de tus metas</span>
                <svg
                    width="20"
                    height="20"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                >
                    <path d="M5 12h14M12 5l7 7-7 7"></path>
                </svg>
            </a>
        </div>
    </div>

    <!-- Esta columna ahora es solo para la imagen de fondo -->
    <div
        class="image-column animate-on-scroll"
        data-delay="0.3"
        style={`background-image: url(${dadPhoto.src});`}
    >
        <div class="image-overlay"></div>
    </div>
</section>

<style>
    #content-block-section {
        display: grid;
        grid-template-columns: 1fr 1fr;
        min-height: 100vh;
        background: linear-gradient(
            135deg,
            #1a1a2e 0%,
            #16213e 50%,
            #0f3460 100%
        );
        overflow: hidden;
        position: relative;
        margin-top: -2rem;
    }

    /* --- COLUMNA DE TEXTO --- */
    .text-column {
        color: var(--blanco-puro);
        padding: 0;
        display: flex;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .content-wrapper {
        padding: 4rem;
        max-width: 600px;
    }

    .section-badge {
        display: inline-block;
        background: linear-gradient(135deg, var(--dorado-acento), #ffd700);
        color: var(--gris-oscuro);
        font-size: 0.875rem;
        font-weight: 700;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        margin-bottom: 1.5rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .text-column h2 {
        font-size: 3.5rem;
        font-weight: 900;
        line-height: 1.1;
        margin-bottom: 0.5rem;
        width: 100%;
        max-width: 100%;
        background: linear-gradient(135deg, var(--blanco-puro), #e8f4fd);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        opacity: 0;
        transform: translateX(-50px);
        transition: all 0.8s ease;
        word-wrap: break-word;
        overflow-wrap: break-word;
    }

    .text-column h2.animate-in {
        opacity: 1;
        transform: translateX(0);
    }

    .text-column h3 {
        margin-bottom: 2rem;
    }

    .text-column p {
        font-size: 1.25rem;
        line-height: 1.8;
        margin-bottom: 2.5rem;
        color: #e8f4fd;
        opacity: 0;
        transform: translateX(-30px);
        transition: all 0.8s ease;
    }

    .text-column p.animate-in {
        opacity: 1;
        transform: translateX(0);
    }

    .trust-indicators {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-bottom: 3rem;
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.8s ease;
    }

    .trust-indicators.animate-in {
        opacity: 1;
        transform: translateY(0);
    }

    .trust-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 1.1rem;
        color: #e8f4fd;
    }

    .trust-icon {
        width: 24px;
        height: 24px;
        background: var(--dorado-acento);
        color: var(--gris-oscuro);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 0.875rem;
    }

    .content-button {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        font-weight: 700;
        font-size: 1.1rem;
        color: var(--gris-oscuro);
        background: linear-gradient(135deg, var(--dorado-acento), #ffd700);
        padding: 1.25rem 2.5rem;
        text-decoration: none;
        border-radius: 12px;
        transition: all 0.3s ease;
        opacity: 0;
        transform: translateY(30px);
        position: relative;
        overflow: hidden;
        box-shadow: 0 8px 25px rgba(250, 217, 98, 0.3);
    }

    .content-button.animate-in {
        opacity: 1;
        transform: translateY(0);
    }

    .content-button::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            90deg,
            transparent,
            rgba(255, 255, 255, 0.3),
            transparent
        );
        transition: left 0.5s ease;
    }

    .content-button:hover::before {
        left: 100%;
    }

    .content-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 35px rgba(250, 217, 98, 0.4);
    }

    /* --- COLUMNA DE IMAGEN --- */
    .image-column {
        height: 100%;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        opacity: 0;
        transform: translateX(50px);
        transition: all 0.8s ease;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .image-column.animate-in {
        opacity: 1;
        transform: translateX(0);
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            135deg,
            rgba(26, 26, 46, 0.3),
            rgba(15, 52, 96, 0.4)
        );
    }

    .floating-card {
        position: absolute;
        bottom: 4rem;
        right: 4rem;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        max-width: 280px;
        transform: translateY(30px);
        opacity: 0;
        animation: floatCard 0.8s ease 1s forwards;
    }

    @keyframes floatCard {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .card-icon {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .card-content h4 {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--gris-oscuro);
        margin-bottom: 0.5rem;
    }

    .card-content p {
        font-size: 0.9rem;
        color: #666;
        line-height: 1.5;
    }

    /* --- DISEÑO RESPONSIVO --- */
    @media (max-width: 992px) {
        #content-block-section {
            grid-template-columns: 1fr;
            grid-template-rows: auto 1fr;
        }

        .image-column {
            min-height: 400px;
            grid-row: 1;
        }

        .content-wrapper {
            padding: 3rem 2rem;
            max-width: 100%;
        }

        .text-column h2 {
            font-size: 2.5rem;
            width: 100%;
        }

    }

    @media (max-width: 768px) {
        .content-wrapper {
            padding: 2rem 1.5rem;
            max-width: 100%;
        }

        .text-column h2 {
            font-size: 2rem;
            width: 100%;
            line-height: 1.2;
        }

        .text-column h3 {
            font-size: 1.5rem;
            line-height: 1.3;
        }

        .text-column p {
            font-size: 1.1rem;
            line-height: 1.6;
        }

        .trust-indicators {
            gap: 0.75rem;
        }

        .trust-item {
            font-size: 1rem;
        }

        .content-button {
            width: 100%;
            justify-content: center;
            padding: 1rem 2rem;
        }
        #buttom-hablemos {
            margin-bottom: 20px;
        }
    }

    @media (max-width: 480px) {
        .content-wrapper {
            padding: 1.5rem 1rem;
        }

        .text-column h2 {
            font-size: 1.8rem;
            line-height: 1.3;
        }

        .text-column h3 {
            font-size: 1.3rem;
            line-height: 1.4;
        }

        .text-column p {
            font-size: 1rem;
            line-height: 1.5;
        }

        .section-badge {
            font-size: 0.75rem;
            padding: 0.4rem 0.8rem;
        }

        .trust-item {
            font-size: 0.9rem;
        }

        .content-button {
            font-size: 1rem;
            padding: 0.9rem 1.5rem;
        }
    }
</style>

<script>
    // Animation d'entrée au scroll
    function animateOnScroll() {
        const elements = document.querySelectorAll(".animate-on-scroll");

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        const element = entry.target as HTMLElement;
                        const delay = parseInt(element.dataset.delay || "0");

                        setTimeout(() => {
                            element.classList.add("animate-in");
                        }, delay * 1000);
                    }
                });
            },
            {
                threshold: 0.1,
                rootMargin: "0px 0px -50px 0px",
            },
        );

        elements.forEach((element) => {
            observer.observe(element);
        });
    }

    // Initialiser les animations
    document.addEventListener("DOMContentLoaded", animateOnScroll);
</script>
